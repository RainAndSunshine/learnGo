package main

import "fmt"

func main() {
	//切片的拷贝copy
	a1 := []int{1, 2, 3}
	a2 := a1 //赋值，用的同一片内存
	//一定要初始化，不然没内存给你拷贝
	//长度要写好，不然没位置给你拷贝
	var a3 = make([]int, 3, 5)
	copy(a3, a1) //拷贝，拿出数据去一片新内存
	fmt.Println(a1, a2, a3)
	a1[0] = 100
	fmt.Println(a1, a2, a3)

	//从切片中删除元素，利用append

	//1.切片不保存具体的值
	//2.切片对应一个底层数组
	//3.底层数组都是占用一块连续的内存

	//删除索引为1的元素
	//必须要拆开
	//...表示拆分
	a1 = append(a1[:1], a1[2:]...) //利用左闭右开，修改了底层数组
	//删除操作是将后面的所有元素往前挪，覆盖住被删的索引位置
	fmt.Println(a1, a2, a3)

	a4 := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
	a5 := a4
	a4 = append(a4[:1], a4[2:]...)
	fmt.Println(a4)
	fmt.Println(a5)
}
